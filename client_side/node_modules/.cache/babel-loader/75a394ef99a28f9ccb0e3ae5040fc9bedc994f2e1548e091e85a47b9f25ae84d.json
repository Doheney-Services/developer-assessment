{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/developer-assessment/client-side/src/pages/Dashboard/Dashboard.jsx\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  var _s = $RefreshSig$();\n  const Balance = () => {\n    _s();\n    const [name, setName] = useState('');\n    const userId = localStorage.getItem('userId');\n    console.log(userId);\n    useEffect(() => {\n      // Fetch the user's balance from the backend API\n      fetch(`https://localhost/users/${userId}`, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('id', userId)}`\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        // Set the balance state with the fetched data\n        setName(data.fullname);\n      }).catch(error => {\n        console.error('Error fetching balance:', error);\n      });\n    }, [userId]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  };\n  _s(Balance, \"nVbhOIYDoHElhkRqYpJCqH0DXNE=\");\n};\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dashboard","_s","$RefreshSig$","Balance","name","setName","userId","localStorage","getItem","console","log","useEffect","fetch","method","headers","Authorization","then","response","json","data","fullname","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/developer-assessment/client-side/src/pages/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, {useState, } from 'react'\n\nconst Dashboard = () =>\n{\n    const Balance = () =>\n    {\n        const [name, setName] = useState('');\n        const userId = localStorage.getItem('userId');\n        console.log(userId)\n        useEffect(() =>\n        {\n            // Fetch the user's balance from the backend API\n            fetch(`https://localhost/users/${userId}`, {\n                method: 'GET',\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem('id', userId)}`,\n                },\n            })\n                .then((response) => response.json())\n                .then((data) =>\n                {\n                    console.log(data)\n                    // Set the balance state with the fetched data\n                    setName(data.fullname);\n                })\n                .catch((error) =>\n                {\n                    console.error('Error fetching balance:', error);\n                });\n        }, [userId]);\n\n        return (\n            <div>\n                {name}\n            </div>\n        )\n    }\n}\n    export default Dashboard;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAS,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGA,CAAA,KAClB;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACI,MAAMC,OAAO,GAAGA,CAAA,KAChB;IAAAF,EAAA;IACI,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;IACpC,MAAMS,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7CC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;IACnBK,SAAS,CAAC,MACV;MACI;MACAC,KAAK,CAAE,2BAA0BN,MAAO,EAAC,EAAE;QACvCO,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACLC,aAAa,EAAG,UAASR,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEF,MAAM,CAAE;QAChE;MACJ,CAAC,CAAC,CACGU,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IACX;QACIV,OAAO,CAACC,GAAG,CAACS,IAAI,CAAC;QACjB;QACAd,OAAO,CAACc,IAAI,CAACC,QAAQ,CAAC;MAC1B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IACb;QACIb,OAAO,CAACa,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD,CAAC,CAAC;IACV,CAAC,EAAE,CAAChB,MAAM,CAAC,CAAC;IAEZ,oBACIP,OAAA;MAAAwB,QAAA,EACKnB;IAAI;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEd,CAAC;EAAA1B,EAAA,CAhCKE,OAAO;AAiCjB,CAAC;AAAAyB,EAAA,GAnCK5B,SAAS;AAoCX,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}