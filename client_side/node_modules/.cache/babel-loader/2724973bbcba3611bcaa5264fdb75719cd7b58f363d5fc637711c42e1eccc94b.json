{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/new-bank-app/client-side/src/components/withdrawal/withdrawal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WithdrawPage = () => {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleAmountChange = e => {\n    setAmount(e.target.value);\n  };\n  const handleWithdraw = async () => {\n    try {\n      const userId = localStorage.getItem('userId');\n      const depositResponse = await fetch(`https://olaitan01.onrender.com/users/${userId}/withdraw`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('id', userId)}`\n        },\n        body: JSON.stringify({\n          amount\n        })\n      });\n      if (depositResponse.ok) {\n        const depositData = await depositResponse.json();\n        console.log('Withdrawal successful:', depositData);\n        const successful = depositData;\n        console.log('Login failed:', successful.message);\n\n        // Display the error message\n        setSuccessMessage(successful.message);\n        // Perform any additional actions or show success message\n      } else {\n        console.error('Withdrawal failed:', depositResponse.status);\n        // Handle deposit failure\n        // Show error message or perform any error handling\n      }\n    } catch (error) {\n      console.error('Error during withdrawal:', error);\n      // Handle deposit error\n      // Show error message or perform any error handling\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: amount,\n        onChange: handleAmountChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleWithdraw,\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(WithdrawPage, \"hhcjFAxorBvErnwfCw91BJyH4VM=\");\n_c = WithdrawPage;\nexport default WithdrawPage;\nvar _c;\n$RefreshReg$(_c, \"WithdrawPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WithdrawPage","_s","amount","setAmount","successMessage","setSuccessMessage","handleAmountChange","e","target","value","handleWithdraw","userId","localStorage","getItem","depositResponse","fetch","method","headers","Authorization","body","JSON","stringify","ok","depositData","json","console","log","successful","message","error","status","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/new-bank-app/client-side/src/components/withdrawal/withdrawal.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst WithdrawPage = () =>\n{\n    const [amount, setAmount] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n\n    const handleAmountChange = (e) =>\n    {\n        setAmount(e.target.value);\n    };\n\n    const handleWithdraw = async () =>\n    {\n        try\n        {\n            const userId = localStorage.getItem('userId');\n            const depositResponse = await fetch(`https://olaitan01.onrender.com/users/${userId}/withdraw`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('id', userId)}`,\n                },\n                body: JSON.stringify({ amount }),\n            });\n\n            if (depositResponse.ok)\n            {\n                const depositData = await depositResponse.json();\n                console.log('Withdrawal successful:', depositData);\n                const successful = depositData;\n                console.log('Login failed:', successful.message);\n\n                // Display the error message\n                setSuccessMessage(successful.message);\n                // Perform any additional actions or show success message\n            } else\n            {\n                console.error('Withdrawal failed:', depositResponse.status);\n                // Handle deposit failure\n                // Show error message or perform any error handling\n\n            }\n        } catch (error)\n        {\n            console.error('Error during withdrawal:', error);\n            // Handle deposit error\n            // Show error message or perform any error handling\n        }\n    }\n\n\n    return (\n        <div>\n            <h2>Withdraw</h2>\n            <label>\n                Amount:\n                <input type=\"number\" value={amount} onChange={handleAmountChange} />\n            </label>\n            <br />\n            <button onClick={handleWithdraw}>Withdraw</button>\n        </div>\n    );\n\n}\nexport default WithdrawPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KACrB;EAAAC,EAAA;EACI,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMS,kBAAkB,GAAIC,CAAC,IAC7B;IACIJ,SAAS,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KACvB;IACI,IACA;MACI,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC7C,MAAMC,eAAe,GAAG,MAAMC,KAAK,CAAE,wCAAuCJ,MAAO,WAAU,EAAE;QAC3FK,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAASN,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEF,MAAM,CAAE;QAChE,CAAC;QACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEnB;QAAO,CAAC;MACnC,CAAC,CAAC;MAEF,IAAIY,eAAe,CAACQ,EAAE,EACtB;QACI,MAAMC,WAAW,GAAG,MAAMT,eAAe,CAACU,IAAI,CAAC,CAAC;QAChDC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,WAAW,CAAC;QAClD,MAAMI,UAAU,GAAGJ,WAAW;QAC9BE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,UAAU,CAACC,OAAO,CAAC;;QAEhD;QACAvB,iBAAiB,CAACsB,UAAU,CAACC,OAAO,CAAC;QACrC;MACJ,CAAC,MACD;QACIH,OAAO,CAACI,KAAK,CAAC,oBAAoB,EAAEf,eAAe,CAACgB,MAAM,CAAC;QAC3D;QACA;MAEJ;IACJ,CAAC,CAAC,OAAOD,KAAK,EACd;MACIJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD;MACA;IACJ;EACJ,CAAC;;EAGD,oBACI9B,OAAA;IAAAgC,QAAA,gBACIhC,OAAA;MAAAgC,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBpC,OAAA;MAAAgC,QAAA,GAAO,SAEH,eAAAhC,OAAA;QAAOqC,IAAI,EAAC,QAAQ;QAAC3B,KAAK,EAAEP,MAAO;QAACmC,QAAQ,EAAE/B;MAAmB;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACRpC,OAAA;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpC,OAAA;MAAQuC,OAAO,EAAE5B,cAAe;MAAAqB,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAGd,CAAC;AAAAlC,EAAA,CA9DKD,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AA+DlB,eAAeA,YAAY;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}