{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/new-bank-app/client-side/src/pages/dashboard/dashboard.jsx\";\nimport React from 'react';\n// import DepositPage from '../../components/deposit/deposit';\n// import WithdrawalPage from '../../components/withdrawal/withdrawal';\n// import Balance from '../../components/balance/balance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  //     const [transactions, setTransactions] = useState([]);\n  // //   const userId = getUserIdFromToken(); // Implement a function to extract user ID from the token\n  // const userId = localStorage.getItem('id');\n  //     useEffect(() =>\n  //     {\n  //         // Fetch the user's transaction history from the backend API\n  //         fetch(`https://olaitan01.onrender.com/users/${userId}/history`, {\n  //             headers: {\n  //                 Authorization: `Bearer ${localStorage.getItem('id', userId)}`,\n  //             },\n  //         })\n  //             .then((response) => response.json())\n  //             .then((data) =>\n  //             {\n  //                 // Set the fetched transaction data to the state\n  //                 setTransactions(data);\n  //                 console.log(data);\n  //             })\n  //             .catch((error) =>\n  //             {\n  //                 console.error('Error fetching transaction history:', error);\n  //             });\n  //     }, [userId]);\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //     <div>\n    //         <h2>Balance</h2>\n    //       <Balance/>\n    //     </div>\n    //     <div>\n    //         <h2>Deposit</h2>\n    //         <DepositPage/>\n    //     </div>\n    //     <div>\n    //         <h2>Withdrawal</h2>\n    //         <WithdrawalPage />\n    //     </div>\n    //     <h2>Transaction History</h2>\n    //     <table>\n    //         <thead>\n    //             <tr>\n    //                 <th>Date</th>\n    //                 <th>Amount</th>\n    //                 <th>Type</th>\n    //             </tr>\n    //         </thead>\n    //         <tbody>\n    //             {transactions.map((transaction) => (\n    //                 <tr key={transaction.id}>\n    //                     <td>{transaction.date}</td>\n    //                     <td>{transaction.amount}</td>\n    //                     <td>{transaction.type}</td>\n    //                 </tr>\n    //             ))}\n    //         </tbody>\n    //     </table>\n    // </div>\n    _jsxDEV(\"div\", {\n      children: \"Dasboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Dashboard","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/new-bank-app/client-side/src/pages/dashboard/dashboard.jsx"],"sourcesContent":["import React, {  } from 'react';\n// import DepositPage from '../../components/deposit/deposit';\n// import WithdrawalPage from '../../components/withdrawal/withdrawal';\n// import Balance from '../../components/balance/balance';\n\nconst Dashboard = () =>\n{\n//     const [transactions, setTransactions] = useState([]);\n// //   const userId = getUserIdFromToken(); // Implement a function to extract user ID from the token\n// const userId = localStorage.getItem('id');\n//     useEffect(() =>\n//     {\n//         // Fetch the user's transaction history from the backend API\n//         fetch(`https://olaitan01.onrender.com/users/${userId}/history`, {\n//             headers: {\n//                 Authorization: `Bearer ${localStorage.getItem('id', userId)}`,\n//             },\n//         })\n//             .then((response) => response.json())\n//             .then((data) =>\n//             {\n//                 // Set the fetched transaction data to the state\n//                 setTransactions(data);\n//                 console.log(data);\n//             })\n//             .catch((error) =>\n//             {\n//                 console.error('Error fetching transaction history:', error);\n//             });\n//     }, [userId]);\n\n    return (\n        // <div>\n        //     <div>\n        //         <h2>Balance</h2>\n        //       <Balance/>\n\n        //     </div>\n        //     <div>\n        //         <h2>Deposit</h2>\n        //         <DepositPage/>\n        //     </div>\n        //     <div>\n        //         <h2>Withdrawal</h2>\n        //         <WithdrawalPage />\n        //     </div>\n        //     <h2>Transaction History</h2>\n        //     <table>\n        //         <thead>\n        //             <tr>\n        //                 <th>Date</th>\n        //                 <th>Amount</th>\n        //                 <th>Type</th>\n        //             </tr>\n        //         </thead>\n        //         <tbody>\n        //             {transactions.map((transaction) => (\n        //                 <tr key={transaction.id}>\n        //                     <td>{transaction.date}</td>\n        //                     <td>{transaction.amount}</td>\n        //                     <td>{transaction.type}</td>\n        //                 </tr>\n        //             ))}\n        //         </tbody>\n        //     </table>\n        // </div>\n        <div>Dasboard</div>\n    );\n};\n\nexport default Dashboard;"],"mappings":";AAAA,OAAOA,KAAK,MAAY,OAAO;AAC/B;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGA,CAAA,KAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEI;IAAA;IACI;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAD,OAAA;MAAAE,QAAA,EAAK;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;AAE3B,CAAC;AAACC,EAAA,GA/DIN,SAAS;AAiEf,eAAeA,SAAS;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}