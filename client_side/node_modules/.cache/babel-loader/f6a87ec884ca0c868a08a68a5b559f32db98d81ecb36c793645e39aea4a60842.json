{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DepositPage from '../../components/deposit/deposit';\nimport WithdrawalPage from '../../components/withdrawal/withdrawal';\nimport Balance from '../../components/balance/balance';\nconst Dashboard = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  //   const userId = getUserIdFromToken(); // Implement a function to extract user ID from the token\n  const userId = localStorage.getItem('id');\n  useEffect(() => {\n    // Fetch the user's transaction history from the backend API\n    fetch(`https://olaitan01.onrender.com/users/${userId}/history`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('id', userId)}`\n      }\n    }).then(response => response.json()).then(data => {\n      // Set the fetched transaction data to the state\n      setTransactions(data);\n      console.log(data);\n    }).catch(error => {\n      console.error('Error fetching transaction history:', error);\n    });\n  }, [userId]);\n  return (\n    // <div>\n    //     <div>\n    //         <h2>Balance</h2>\n    //       <Balance/>\n\n    //     </div>\n    //     <div>\n    //         <h2>Deposit</h2>\n    //         <DepositPage/>\n    //     </div>\n    //     <div>\n    //         <h2>Withdrawal</h2>\n    //         <WithdrawalPage />\n    //     </div>\n    //     <h2>Transaction History</h2>\n    //     <table>\n    //         <thead>\n    //             <tr>\n    //                 <th>Date</th>\n    //                 <th>Amount</th>\n    //                 <th>Type</th>\n    //             </tr>\n    //         </thead>\n    //         <tbody>\n    //             {transactions.map((transaction) => (\n    //                 <tr key={transaction.id}>\n    //                     <td>{transaction.date}</td>\n    //                     <td>{transaction.amount}</td>\n    //                     <td>{transaction.type}</td>\n    //                 </tr>\n    //             ))}\n    //         </tbody>\n    //     </table>\n    // </div>\n    div\n  );\n};\n_s(Dashboard, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","DepositPage","WithdrawalPage","Balance","Dashboard","_s","transactions","setTransactions","userId","localStorage","getItem","fetch","headers","Authorization","then","response","json","data","console","log","catch","error","div","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/new-bank-app/client-side/src/pages/dashboard/dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DepositPage from '../../components/deposit/deposit';\nimport WithdrawalPage from '../../components/withdrawal/withdrawal';\nimport Balance from '../../components/balance/balance';\n\nconst Dashboard = () =>\n{\n    const [transactions, setTransactions] = useState([]);\n//   const userId = getUserIdFromToken(); // Implement a function to extract user ID from the token\nconst userId = localStorage.getItem('id');\n    useEffect(() =>\n    {\n        // Fetch the user's transaction history from the backend API\n        fetch(`https://olaitan01.onrender.com/users/${userId}/history`, {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem('id', userId)}`,\n            },\n        })\n            .then((response) => response.json())\n            .then((data) =>\n            {\n                // Set the fetched transaction data to the state\n                setTransactions(data);\n                console.log(data);\n            })\n            .catch((error) =>\n            {\n                console.error('Error fetching transaction history:', error);\n            });\n    }, [userId]);\n\n    return (\n        // <div>\n        //     <div>\n        //         <h2>Balance</h2>\n        //       <Balance/>\n\n        //     </div>\n        //     <div>\n        //         <h2>Deposit</h2>\n        //         <DepositPage/>\n        //     </div>\n        //     <div>\n        //         <h2>Withdrawal</h2>\n        //         <WithdrawalPage />\n        //     </div>\n        //     <h2>Transaction History</h2>\n        //     <table>\n        //         <thead>\n        //             <tr>\n        //                 <th>Date</th>\n        //                 <th>Amount</th>\n        //                 <th>Type</th>\n        //             </tr>\n        //         </thead>\n        //         <tbody>\n        //             {transactions.map((transaction) => (\n        //                 <tr key={transaction.id}>\n        //                     <td>{transaction.date}</td>\n        //                     <td>{transaction.amount}</td>\n        //                     <td>{transaction.type}</td>\n        //                 </tr>\n        //             ))}\n        //         </tbody>\n        //     </table>\n        // </div>\n        div\n    );\n};\n\nexport default Dashboard;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,kCAAkC;AAC1D,OAAOC,cAAc,MAAM,wCAAwC;AACnE,OAAOC,OAAO,MAAM,kCAAkC;AAEtD,MAAMC,SAAS,GAAGA,CAAA,KAClB;EAAAC,EAAA;EACI,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD;EACA,MAAMS,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;EACrCV,SAAS,CAAC,MACV;IACI;IACAW,KAAK,CAAE,wCAAuCH,MAAO,UAAS,EAAE;MAC5DI,OAAO,EAAE;QACLC,aAAa,EAAG,UAASJ,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEF,MAAM,CAAE;MAChE;IACJ,CAAC,CAAC,CACGM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IACX;MACI;MACAV,eAAe,CAACU,IAAI,CAAC;MACrBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACrB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IACb;MACIH,OAAO,CAACG,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC/D,CAAC,CAAC;EACV,CAAC,EAAE,CAACb,MAAM,CAAC,CAAC;EAEZ;IACI;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAc;EAAG;AAEX,CAAC;AAACjB,EAAA,CA/DID,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AAiEf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}