{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/new-bank-app/client-side/src/components/balance/balance.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Balance = () => {\n  _s();\n  const [balance, setBalance] = useState('');\n  const userId = localStorage.getItem('id');\n  useEffect(() => {\n    // Fetch the user's balance from the backend API\n    fetch(`https://olaitan01.onrender.com/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('id', userId)}`\n      }\n    }).then(response => response.json()).then(data => {\n      // Set the balance state with the fetched data\n      setBalance(data.balance);\n    }).catch(error => {\n      console.error('Error fetching balance:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: balance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Balance, \"3B5ZvsbhrAbrELt3CIYmKSxoC3M=\");\n_c = Balance;\nexport default Balance;\nvar _c;\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Balance","_s","balance","setBalance","userId","localStorage","getItem","fetch","headers","Authorization","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/new-bank-app/client-side/src/components/balance/balance.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Balance = () =>\n{\n    const [balance, setBalance] = useState('');\n    const userId = localStorage.getItem('id');\n\n    useEffect(() =>\n    {\n        // Fetch the user's balance from the backend API\n        fetch(`https://olaitan01.onrender.com/users/${userId}`, {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem('id', userId)}`,\n            },\n        })\n            .then((response) => response.json())\n            .then((data) =>\n            {\n                // Set the balance state with the fetched data\n                setBalance(data.balance);\n            })\n            .catch((error) =>\n            {\n                console.error('Error fetching balance:', error);\n            });\n    }, []);\n\n    return (\n        <div>\n            <h2>Balance</h2>\n            <p>{balance}</p>\n        </div>\n    );\n};\n\nexport default Balance;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAA,KAChB;EAAAC,EAAA;EACI,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMO,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;EAEzCV,SAAS,CAAC,MACV;IACI;IACAW,KAAK,CAAE,wCAAuCH,MAAO,EAAC,EAAE;MACpDI,OAAO,EAAE;QACLC,aAAa,EAAG,UAASJ,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEF,MAAM,CAAE;MAChE;IACJ,CAAC,CAAC,CACGM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IACX;MACI;MACAV,UAAU,CAACU,IAAI,CAACX,OAAO,CAAC;IAC5B,CAAC,CAAC,CACDY,KAAK,CAAEC,KAAK,IACb;MACIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIhB,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBtB,OAAA;MAAAkB,QAAA,EAAIf;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEd,CAAC;AAACpB,EAAA,CA/BID,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AAiCb,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}