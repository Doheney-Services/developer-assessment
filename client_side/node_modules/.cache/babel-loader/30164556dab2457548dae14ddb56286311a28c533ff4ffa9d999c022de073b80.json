{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/new-bank-app/client-side/src/components/deposit/deposit.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DepositPage = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [amount, setAmount] = useState('');\n  const handleAmountChange = e => {\n    setAmount(e.target.value);\n  };\n  const handleDeposit = async () => {\n    _s();\n    const userId = localStorage.getItem('userId');\n    console.log(userId);\n    // Send deposit request to the backend API\n    useEffect(() => {\n      fetch(`https://olaitan01.onrender.com/users/${userId}/history`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('id', userId)}`\n        }\n      }).then(response => response.json()).then(data => {\n        // Check if data is an array\n        if (Array.isArray(data)) {\n          // Set the fetched transaction data to the state\n          setTransactions(data);\n          console.log(data);\n        } else {\n          console.error('Invalid transaction data:', data);\n        }\n      }).catch(error => {\n        console.error('Error fetching transaction history:', error);\n      });\n\n      // Deposit funds\n      const depositFunds = async () => {\n        try {\n          const depositFund = await fetch(`https://olaitan01.onrender.com/users/${userId}/deposit`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${localStorage.getItem('id', userId)}`\n            },\n            body: JSON.stringify({\n              amount\n            })\n          });\n          const depositData = await depositFund.json();\n          console.log('Deposit successful:', depositData);\n          // Perform any additional actions or show success message\n        } catch (error) {\n          console.error('Error during deposit:', error);\n          // Handle deposit error\n          // Show error message or perform any error handling\n        }\n      };\n\n      // Call the deposit funds function\n      depositFunds();\n    }, [userId]);\n  };\n  _s(handleDeposit, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: amount,\n        onChange: handleAmountChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeposit,\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s2(DepositPage, \"bZHaZdBRaKnkQpBOPbUIgu3hW48=\");\n_c = DepositPage;\nexport default DepositPage;\nvar _c;\n$RefreshReg$(_c, \"DepositPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DepositPage","_s2","_s","$RefreshSig$","amount","setAmount","handleAmountChange","e","target","value","handleDeposit","userId","localStorage","getItem","console","log","useEffect","fetch","headers","Authorization","then","response","json","data","Array","isArray","setTransactions","error","catch","depositFunds","depositFund","method","body","JSON","stringify","depositData","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/new-bank-app/client-side/src/components/deposit/deposit.jsx"],"sourcesContent":["import React, { useState, } from 'react';\n\nconst DepositPage = () =>\n{\n    const [amount, setAmount] = useState('');\n    const handleAmountChange = (e) =>\n    {\n        setAmount(e.target.value);\n    };\n\n    const handleDeposit = async () =>\n    {\n        const userId = localStorage.getItem('userId');\n        console.log(userId)\n        // Send deposit request to the backend API\n        useEffect(() =>\n        {\n            fetch(`https://olaitan01.onrender.com/users/${userId}/history`, {\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem('id', userId)}`,\n                },\n            })\n                .then((response) => response.json())\n                .then((data) =>\n                {\n                    // Check if data is an array\n                    if (Array.isArray(data))\n                    {\n                        // Set the fetched transaction data to the state\n                        setTransactions(data);\n                        console.log(data);\n                    } else\n                    {\n                        console.error('Invalid transaction data:', data);\n                    }\n                })\n                .catch((error) =>\n                {\n                    console.error('Error fetching transaction history:', error);\n                });\n\n            // Deposit funds\n            const depositFunds = async () =>\n            {\n                try\n                {\n                    const depositFund = await fetch(`https://olaitan01.onrender.com/users/${userId}/deposit`, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            Authorization: `Bearer ${localStorage.getItem('id', userId)}`,\n                        },\n                        body: JSON.stringify({ amount }),\n                    });\n                    const depositData = await depositFund.json();\n                    console.log('Deposit successful:', depositData);\n                    // Perform any additional actions or show success message\n                } catch (error)\n                {\n                    console.error('Error during deposit:', error);\n                    // Handle deposit error\n                    // Show error message or perform any error handling\n                }\n            };\n\n            // Call the deposit funds function\n            depositFunds();\n        }, [userId]);\n    }\n\n    return (\n        <div>\n            <h2>Deposit</h2>\n            <label>\n                Amount:\n                <input\n                    type=\"number\"\n                    value={amount}\n                    onChange={handleAmountChange}\n                />\n            </label>\n            <br />\n            <button onClick={handleDeposit}>Deposit</button>\n        </div>\n    );\n};\n\nexport default DepositPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAS,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,GAAGA,CAAA,KACpB;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACI,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMS,kBAAkB,GAAIC,CAAC,IAC7B;IACIF,SAAS,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KACtB;IAAAR,EAAA;IACI,MAAMS,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7CC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;IACnB;IACAK,SAAS,CAAC,MACV;MACIC,KAAK,CAAE,wCAAuCN,MAAO,UAAS,EAAE;QAC5DO,OAAO,EAAE;UACLC,aAAa,EAAG,UAASP,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEF,MAAM,CAAE;QAChE;MACJ,CAAC,CAAC,CACGS,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IACX;QACI;QACA,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EACvB;UACI;UACAG,eAAe,CAACH,IAAI,CAAC;UACrBT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;QACrB,CAAC,MACD;UACIT,OAAO,CAACa,KAAK,CAAC,2BAA2B,EAAEJ,IAAI,CAAC;QACpD;MACJ,CAAC,CAAC,CACDK,KAAK,CAAED,KAAK,IACb;QACIb,OAAO,CAACa,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC/D,CAAC,CAAC;;MAEN;MACA,MAAME,YAAY,GAAG,MAAAA,CAAA,KACrB;QACI,IACA;UACI,MAAMC,WAAW,GAAG,MAAMb,KAAK,CAAE,wCAAuCN,MAAO,UAAS,EAAE;YACtFoB,MAAM,EAAE,MAAM;YACdb,OAAO,EAAE;cACL,cAAc,EAAE,kBAAkB;cAClCC,aAAa,EAAG,UAASP,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEF,MAAM,CAAE;YAChE,CAAC;YACDqB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAE9B;YAAO,CAAC;UACnC,CAAC,CAAC;UACF,MAAM+B,WAAW,GAAG,MAAML,WAAW,CAACR,IAAI,CAAC,CAAC;UAC5CR,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEoB,WAAW,CAAC;UAC/C;QACJ,CAAC,CAAC,OAAOR,KAAK,EACd;UACIb,OAAO,CAACa,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7C;UACA;QACJ;MACJ,CAAC;;MAED;MACAE,YAAY,CAAC,CAAC;IAClB,CAAC,EAAE,CAAClB,MAAM,CAAC,CAAC;EAChB,CAAC;EAAAT,EAAA,CA1DKQ,aAAa;EA4DnB,oBACIX,OAAA;IAAAqC,QAAA,gBACIrC,OAAA;MAAAqC,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBzC,OAAA;MAAAqC,QAAA,GAAO,SAEH,eAAArC,OAAA;QACI0C,IAAI,EAAC,QAAQ;QACbhC,KAAK,EAAEL,MAAO;QACdsC,QAAQ,EAAEpC;MAAmB;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACRzC,OAAA;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNzC,OAAA;MAAQ4C,OAAO,EAAEjC,aAAc;MAAA0B,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd,CAAC;AAACvC,GAAA,CAnFID,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AAqFjB,eAAeA,WAAW;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}